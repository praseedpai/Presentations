

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class FA2 : System.Data.Linq.DataContext
{

    private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFAGroup(FAGroup instance);
    partial void UpdateFAGroup(FAGroup instance);
    partial void DeleteFAGroup(FAGroup instance);
    partial void InsertFASubGroup(FASubGroup instance);
    partial void UpdateFASubGroup(FASubGroup instance);
    partial void DeleteFASubGroup(FASubGroup instance);
    partial void InsertJournalMaster(JournalMaster instance);
    partial void UpdateJournalMaster(JournalMaster instance);
    partial void DeleteJournalMaster(JournalMaster instance);
    #endregion

    public FA2(string connection) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public FA2(System.Data.IDbConnection connection) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public FA2(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public FA2(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
        base(connection, mappingSource)
    {
        OnCreated();
    }

    public System.Data.Linq.Table<FAGroup> FAGroup
    {
        get
        {
            return this.GetTable<FAGroup>();
        }
    }

    public System.Data.Linq.Table<FASubGroup> FASubGroup
    {
        get
        {
            return this.GetTable<FASubGroup>();
        }
    }

    public System.Data.Linq.Table<JournalDetail> JournalDetail
    {
        get
        {
            return this.GetTable<JournalDetail>();
        }
    }

    public System.Data.Linq.Table<JournalMaster> JournalMaster
    {
        get
        {
            return this.GetTable<JournalMaster>();
        }
    }

    [Function(Name = "dbo.spCreateFAGroup")]
    [return: Parameter(DbType = "Int")]
    public int SpCreateFAGroup([Parameter(Name = "A_CODE", DbType = "Char(2)")] string a_CODE, [Parameter(Name = "A_DESC", DbType = "Char(50)")] string a_DESC, [Parameter(Name = "A_TYPE", DbType = "Char(1)")] string a_TYPE, [Parameter(Name = "A_CURRB", DbType = "Decimal(18,3)")] System.Nullable<decimal> a_CURRB)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), a_CODE, a_DESC, a_TYPE, a_CURRB);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spCreateFASubGroup")]
    [return: Parameter(DbType = "Int")]
    public int SpCreateFASubGroup([Parameter(Name = "S_CODE", DbType = "Char(5)")] string s_CODE, [Parameter(Name = "S_DESC", DbType = "Char(50)")] string s_DESC, [Parameter(Name = "S_TYPE", DbType = "Char(2)")] string s_TYPE, [Parameter(Name = "S_OPBAl", DbType = "Decimal(18,3)")] System.Nullable<decimal> s_OPBAl, [Parameter(Name = "S_DRCR", DbType = "Char(2)")] string s_DRCR, [Parameter(Name = "S_FLAG", DbType = "Char(1)")] string s_FLAG)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), s_CODE, s_DESC, s_TYPE, s_OPBAl, s_DRCR, s_FLAG);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spCreateJDetail")]
    [return: Parameter(DbType = "Int")]
    public int SpCreateJDetail([Parameter(Name = "J_ID", DbType = "Char(10)")] string j_ID, [Parameter(Name = "J_CODE", DbType = "Char(5)")] string j_CODE, [Parameter(Name = "J_DRCR", DbType = "Char(2)")] string j_DRCR, [Parameter(Name = "J_AMOUNT", DbType = "Decimal(18,3)")] System.Nullable<decimal> j_AMOUNT)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), j_ID, j_CODE, j_DRCR, j_AMOUNT);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spCreateJMaster")]
    [return: Parameter(DbType = "Int")]
    public int SpCreateJMaster([Parameter(Name = "J_ID", DbType = "Char(10)")] string j_ID, [Parameter(Name = "J_DOC", DbType = "Char(2)")] string j_DOC, [Parameter(Name = "J_DATE", DbType = "DateTime")] System.Nullable<System.DateTime> j_DATE, [Parameter(Name = "J_AMOUNT", DbType = "Decimal(18,3)")] System.Nullable<decimal> j_AMOUNT, [Parameter(Name = "J_NARR", DbType = "NChar(100)")] string j_NARR)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), j_ID, j_DOC, j_DATE, j_AMOUNT, j_NARR);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spDeleteFAGroup")]
    [return: Parameter(DbType = "Int")]
    public int SpDeleteFAGroup([Parameter(Name = "A_CODE", DbType = "Char(2)")] string a_CODE)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), a_CODE);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spDeleteFASubGroup")]
    [return: Parameter(DbType = "Int")]
    public int SpDeleteFASubGroup([Parameter(Name = "S_CODE", DbType = "Char(5)")] string s_CODE)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), s_CODE);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spDeleteJDetail")]
    [return: Parameter(DbType = "Int")]
    public int SpDeleteJDetail([Parameter(Name = "J_ID", DbType = "Char(10)")] string j_ID)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), j_ID);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spDeleteJMaster")]
    [return: Parameter(DbType = "Int")]
    public int SpDeleteJMaster([Parameter(Name = "J_ID", DbType = "Char(10)")] string j_ID)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), j_ID);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spGetFAGroup")]
    public ISingleResult<SpGetFAGroupResult> SpGetFAGroup([Parameter(Name = "A_CODE", DbType = "Char(2)")] string a_CODE)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), a_CODE);
        return ((ISingleResult<SpGetFAGroupResult>)(result.ReturnValue));
    }

    [Function(Name = "dbo.spGetFASubGroup")]
    public ISingleResult<SpGetFASubGroupResult> SpGetFASubGroup([Parameter(Name = "S_CODE", DbType = "Char(5)")] string s_CODE)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), s_CODE);
        return ((ISingleResult<SpGetFASubGroupResult>)(result.ReturnValue));
    }

    [Function(Name = "dbo.spGetJDetail")]
    public ISingleResult<SpGetJDetailResult> SpGetJDetail([Parameter(Name = "J_ID", DbType = "Char(10)")] string j_ID)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), j_ID);
        return ((ISingleResult<SpGetJDetailResult>)(result.ReturnValue));
    }

    [Function(Name = "dbo.spGetJMaster")]
    public ISingleResult<SpGetJMasterResult> SpGetJMaster([Parameter(Name = "J_ID", DbType = "Char(10)")] string j_ID)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), j_ID);
        return ((ISingleResult<SpGetJMasterResult>)(result.ReturnValue));
    }

    [Function(Name = "dbo.spListFAGroup")]
    public ISingleResult<SpListFAGroupResult> SpListFAGroup()
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        return ((ISingleResult<SpListFAGroupResult>)(result.ReturnValue));
    }

    [Function(Name = "dbo.spListFASubGroup")]
    public ISingleResult<SpListFASubGroupResult> SpListFASubGroup()
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        return ((ISingleResult<SpListFASubGroupResult>)(result.ReturnValue));
    }

    [Function(Name = "dbo.spListJDetail")]
    public ISingleResult<SpListJDetailResult> SpListJDetail()
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        return ((ISingleResult<SpListJDetailResult>)(result.ReturnValue));
    }

    [Function(Name = "dbo.spListJMaster")]
    public ISingleResult<SpListJMasterResult> SpListJMaster()
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        return ((ISingleResult<SpListJMasterResult>)(result.ReturnValue));
    }

    [Function(Name = "dbo.spUpdateFAGroup")]
    [return: Parameter(DbType = "Int")]
    public int SpUpdateFAGroup([Parameter(Name = "A_CODE", DbType = "Char(2)")] string a_CODE, [Parameter(Name = "A_DESC", DbType = "Char(50)")] string a_DESC, [Parameter(Name = "A_TYPE", DbType = "Char(1)")] string a_TYPE, [Parameter(Name = "A_CURRB", DbType = "Decimal(18,3)")] System.Nullable<decimal> a_CURRB)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), a_CODE, a_DESC, a_TYPE, a_CURRB);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spUpdateFASubGroup")]
    [return: Parameter(DbType = "Int")]
    public int SpUpdateFASubGroup([Parameter(Name = "S_CODE", DbType = "Char(5)")] string s_CODE, [Parameter(Name = "S_DESC", DbType = "Char(50)")] string s_DESC, [Parameter(Name = "S_TYPE", DbType = "Char(2)")] string s_TYPE, [Parameter(Name = "S_OPBAl", DbType = "Decimal(18,3)")] System.Nullable<decimal> s_OPBAl, [Parameter(Name = "S_DRCR", DbType = "Char(2)")] string s_DRCR, [Parameter(Name = "S_FLAG", DbType = "Char(1)")] string s_FLAG)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), s_CODE, s_DESC, s_TYPE, s_OPBAl, s_DRCR, s_FLAG);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spUpdateJDetail")]
    [return: Parameter(DbType = "Int")]
    public int SpUpdateJDetail([Parameter(Name = "J_ID", DbType = "Char(10)")] string j_ID, [Parameter(Name = "J_CODE", DbType = "Char(5)")] string j_CODE, [Parameter(Name = "J_DRCR", DbType = "Char(2)")] string j_DRCR, [Parameter(Name = "J_AMOUNT", DbType = "Decimal(18,3)")] System.Nullable<decimal> j_AMOUNT)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), j_ID, j_CODE, j_DRCR, j_AMOUNT);
        return ((int)(result.ReturnValue));
    }

    [Function(Name = "dbo.spUpdateJMaster")]
    [return: Parameter(DbType = "Int")]
    public int SpUpdateJMaster([Parameter(Name = "J_ID", DbType = "Char(10)")] string j_ID, [Parameter(Name = "J_DOC", DbType = "Char(5)")] string j_DOC, [Parameter(Name = "J_DATE", DbType = "Char(2)")] string j_DATE, [Parameter(Name = "J_AMOUNT", DbType = "Decimal(18,3)")] System.Nullable<decimal> j_AMOUNT, [Parameter(Name = "J_NARR", DbType = "NChar(100)")] string j_NARR)
    {
        IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), j_ID, j_DOC, j_DATE, j_AMOUNT, j_NARR);
        return ((int)(result.ReturnValue));
    }
}

[Table(Name = "dbo.FAGroup")]
public partial class FAGroup : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _A_CODE;

    private string _A_DESC;

    private string _A_TYPE;

    private decimal _A_CURRB;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnA_CODEChanging(string value);
    partial void OnA_CODEChanged();
    partial void OnA_DESCChanging(string value);
    partial void OnA_DESCChanged();
    partial void OnA_TYPEChanging(string value);
    partial void OnA_TYPEChanged();
    partial void OnA_CURRBChanging(decimal value);
    partial void OnA_CURRBChanged();
    #endregion

    public FAGroup()
    {
        OnCreated();
    }

    [Column(Storage = "_A_CODE", DbType = "Char(2) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string A_CODE
    {
        get
        {
            return this._A_CODE;
        }
        set
        {
            if ((this._A_CODE != value))
            {
                this.OnA_CODEChanging(value);
                this.SendPropertyChanging();
                this._A_CODE = value;
                this.SendPropertyChanged("A_CODE");
                this.OnA_CODEChanged();
            }
        }
    }

    [Column(Storage = "_A_DESC", DbType = "Char(50) NOT NULL", CanBeNull = false)]
    public string A_DESC
    {
        get
        {
            return this._A_DESC;
        }
        set
        {
            if ((this._A_DESC != value))
            {
                this.OnA_DESCChanging(value);
                this.SendPropertyChanging();
                this._A_DESC = value;
                this.SendPropertyChanged("A_DESC");
                this.OnA_DESCChanged();
            }
        }
    }

    [Column(Storage = "_A_TYPE", DbType = "Char(1) NOT NULL", CanBeNull = false)]
    public string A_TYPE
    {
        get
        {
            return this._A_TYPE;
        }
        set
        {
            if ((this._A_TYPE != value))
            {
                this.OnA_TYPEChanging(value);
                this.SendPropertyChanging();
                this._A_TYPE = value;
                this.SendPropertyChanged("A_TYPE");
                this.OnA_TYPEChanged();
            }
        }
    }

    [Column(Storage = "_A_CURRB", DbType = "Decimal(18,3) NOT NULL")]
    public decimal A_CURRB
    {
        get
        {
            return this._A_CURRB;
        }
        set
        {
            if ((this._A_CURRB != value))
            {
                this.OnA_CURRBChanging(value);
                this.SendPropertyChanging();
                this._A_CURRB = value;
                this.SendPropertyChanged("A_CURRB");
                this.OnA_CURRBChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "dbo.FASubGroup")]
public partial class FASubGroup : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _S_CODE;

    private string _S_DESC;

    private string _S_TYPE;

    private decimal _S_OPBAL;

    private string _S_DRCR;

    private string _S_FLAG;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_CODEChanging(string value);
    partial void OnS_CODEChanged();
    partial void OnS_DESCChanging(string value);
    partial void OnS_DESCChanged();
    partial void OnS_TYPEChanging(string value);
    partial void OnS_TYPEChanged();
    partial void OnS_OPBALChanging(decimal value);
    partial void OnS_OPBALChanged();
    partial void OnS_DRCRChanging(string value);
    partial void OnS_DRCRChanged();
    partial void OnS_FLAGChanging(string value);
    partial void OnS_FLAGChanged();
    #endregion

    public FASubGroup()
    {
        OnCreated();
    }

    [Column(Storage = "_S_CODE", DbType = "Char(5) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string S_CODE
    {
        get
        {
            return this._S_CODE;
        }
        set
        {
            if ((this._S_CODE != value))
            {
                this.OnS_CODEChanging(value);
                this.SendPropertyChanging();
                this._S_CODE = value;
                this.SendPropertyChanged("S_CODE");
                this.OnS_CODEChanged();
            }
        }
    }

    [Column(Storage = "_S_DESC", DbType = "Char(50) NOT NULL", CanBeNull = false)]
    public string S_DESC
    {
        get
        {
            return this._S_DESC;
        }
        set
        {
            if ((this._S_DESC != value))
            {
                this.OnS_DESCChanging(value);
                this.SendPropertyChanging();
                this._S_DESC = value;
                this.SendPropertyChanged("S_DESC");
                this.OnS_DESCChanged();
            }
        }
    }

    [Column(Storage = "_S_TYPE", DbType = "Char(1) NOT NULL", CanBeNull = false)]
    public string S_TYPE
    {
        get
        {
            return this._S_TYPE;
        }
        set
        {
            if ((this._S_TYPE != value))
            {
                this.OnS_TYPEChanging(value);
                this.SendPropertyChanging();
                this._S_TYPE = value;
                this.SendPropertyChanged("S_TYPE");
                this.OnS_TYPEChanged();
            }
        }
    }

    [Column(Storage = "_S_OPBAL", DbType = "Decimal(18,3) NOT NULL")]
    public decimal S_OPBAL
    {
        get
        {
            return this._S_OPBAL;
        }
        set
        {
            if ((this._S_OPBAL != value))
            {
                this.OnS_OPBALChanging(value);
                this.SendPropertyChanging();
                this._S_OPBAL = value;
                this.SendPropertyChanged("S_OPBAL");
                this.OnS_OPBALChanged();
            }
        }
    }

    [Column(Storage = "_S_DRCR", DbType = "Char(2) NOT NULL", CanBeNull = false)]
    public string S_DRCR
    {
        get
        {
            return this._S_DRCR;
        }
        set
        {
            if ((this._S_DRCR != value))
            {
                this.OnS_DRCRChanging(value);
                this.SendPropertyChanging();
                this._S_DRCR = value;
                this.SendPropertyChanged("S_DRCR");
                this.OnS_DRCRChanged();
            }
        }
    }

    [Column(Storage = "_S_FLAG", DbType = "Char(1) NOT NULL", CanBeNull = false)]
    public string S_FLAG
    {
        get
        {
            return this._S_FLAG;
        }
        set
        {
            if ((this._S_FLAG != value))
            {
                this.OnS_FLAGChanging(value);
                this.SendPropertyChanging();
                this._S_FLAG = value;
                this.SendPropertyChanged("S_FLAG");
                this.OnS_FLAGChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[Table(Name = "dbo.JournalDetail")]
public partial class JournalDetail
{

    private string _J_ID;

    private string _J_CODE;

    private string _J_DRCR;

    private decimal _J_AMOUNT;

    public JournalDetail()
    {
    }

    [Column(Storage = "_J_ID", DbType = "Char(10) NOT NULL", CanBeNull = false)]
    public string J_ID
    {
        get
        {
            return this._J_ID;
        }
        set
        {
            if ((this._J_ID != value))
            {
                this._J_ID = value;
            }
        }
    }

    [Column(Storage = "_J_CODE", DbType = "Char(5) NOT NULL", CanBeNull = false)]
    public string J_CODE
    {
        get
        {
            return this._J_CODE;
        }
        set
        {
            if ((this._J_CODE != value))
            {
                this._J_CODE = value;
            }
        }
    }

    [Column(Storage = "_J_DRCR", DbType = "Char(2) NOT NULL", CanBeNull = false)]
    public string J_DRCR
    {
        get
        {
            return this._J_DRCR;
        }
        set
        {
            if ((this._J_DRCR != value))
            {
                this._J_DRCR = value;
            }
        }
    }

    [Column(Storage = "_J_AMOUNT", DbType = "Decimal(18,3) NOT NULL")]
    public decimal J_AMOUNT
    {
        get
        {
            return this._J_AMOUNT;
        }
        set
        {
            if ((this._J_AMOUNT != value))
            {
                this._J_AMOUNT = value;
            }
        }
    }
}

[Table(Name = "dbo.JournalMaster")]
public partial class JournalMaster : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private string _J_ID;

    private string _J_DOC;

    private System.DateTime _J_DATE;

    private decimal _J_AMOUNT;

    private string _J_NARR;

    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJ_IDChanging(string value);
    partial void OnJ_IDChanged();
    partial void OnJ_DOCChanging(string value);
    partial void OnJ_DOCChanged();
    partial void OnJ_DATEChanging(System.DateTime value);
    partial void OnJ_DATEChanged();
    partial void OnJ_AMOUNTChanging(decimal value);
    partial void OnJ_AMOUNTChanged();
    partial void OnJ_NARRChanging(string value);
    partial void OnJ_NARRChanged();
    #endregion

    public JournalMaster()
    {
        OnCreated();
    }

    [Column(Storage = "_J_ID", DbType = "Char(10) NOT NULL", CanBeNull = false, IsPrimaryKey = true)]
    public string J_ID
    {
        get
        {
            return this._J_ID;
        }
        set
        {
            if ((this._J_ID != value))
            {
                this.OnJ_IDChanging(value);
                this.SendPropertyChanging();
                this._J_ID = value;
                this.SendPropertyChanged("J_ID");
                this.OnJ_IDChanged();
            }
        }
    }

    [Column(Storage = "_J_DOC", DbType = "Char(2) NOT NULL", CanBeNull = false)]
    public string J_DOC
    {
        get
        {
            return this._J_DOC;
        }
        set
        {
            if ((this._J_DOC != value))
            {
                this.OnJ_DOCChanging(value);
                this.SendPropertyChanging();
                this._J_DOC = value;
                this.SendPropertyChanged("J_DOC");
                this.OnJ_DOCChanged();
            }
        }
    }

    [Column(Storage = "_J_DATE", DbType = "DateTime NOT NULL")]
    public System.DateTime J_DATE
    {
        get
        {
            return this._J_DATE;
        }
        set
        {
            if ((this._J_DATE != value))
            {
                this.OnJ_DATEChanging(value);
                this.SendPropertyChanging();
                this._J_DATE = value;
                this.SendPropertyChanged("J_DATE");
                this.OnJ_DATEChanged();
            }
        }
    }

    [Column(Storage = "_J_AMOUNT", DbType = "Decimal(18,3) NOT NULL")]
    public decimal J_AMOUNT
    {
        get
        {
            return this._J_AMOUNT;
        }
        set
        {
            if ((this._J_AMOUNT != value))
            {
                this.OnJ_AMOUNTChanging(value);
                this.SendPropertyChanging();
                this._J_AMOUNT = value;
                this.SendPropertyChanged("J_AMOUNT");
                this.OnJ_AMOUNTChanged();
            }
        }
    }

    [Column(Storage = "_J_NARR", DbType = "NChar(100) NOT NULL", CanBeNull = false)]
    public string J_NARR
    {
        get
        {
            return this._J_NARR;
        }
        set
        {
            if ((this._J_NARR != value))
            {
                this.OnJ_NARRChanging(value);
                this.SendPropertyChanging();
                this._J_NARR = value;
                this.SendPropertyChanged("J_NARR");
                this.OnJ_NARRChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging()
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged(String propertyName)
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

public partial class SpGetFAGroupResult
{

    private string _A_CODE;

    private string _A_DESC;

    private string _A_TYPE;

    private System.Nullable<decimal> _A_CURRB;

    public SpGetFAGroupResult()
    {
    }

    [Column(Storage = "_A_CODE", DbType = "Char(2)")]
    public string A_CODE
    {
        get
        {
            return this._A_CODE;
        }
        set
        {
            if ((this._A_CODE != value))
            {
                this._A_CODE = value;
            }
        }
    }

    [Column(Storage = "_A_DESC", DbType = "Char(50)")]
    public string A_DESC
    {
        get
        {
            return this._A_DESC;
        }
        set
        {
            if ((this._A_DESC != value))
            {
                this._A_DESC = value;
            }
        }
    }

    [Column(Storage = "_A_TYPE", DbType = "Char(1)")]
    public string A_TYPE
    {
        get
        {
            return this._A_TYPE;
        }
        set
        {
            if ((this._A_TYPE != value))
            {
                this._A_TYPE = value;
            }
        }
    }

    [Column(Storage = "_A_CURRB", DbType = "Decimal(18,3)")]
    public System.Nullable<decimal> A_CURRB
    {
        get
        {
            return this._A_CURRB;
        }
        set
        {
            if ((this._A_CURRB != value))
            {
                this._A_CURRB = value;
            }
        }
    }
}

public partial class SpGetFASubGroupResult
{

    private string _S_CODE;

    private string _S_DESC;

    private string _S_TYPE;

    private System.Nullable<decimal> _S_OPBAL;

    private string _S_DRCR;

    private string _S_FLAG;

    public SpGetFASubGroupResult()
    {
    }

    [Column(Storage = "_S_CODE", DbType = "Char(5)")]
    public string S_CODE
    {
        get
        {
            return this._S_CODE;
        }
        set
        {
            if ((this._S_CODE != value))
            {
                this._S_CODE = value;
            }
        }
    }

    [Column(Storage = "_S_DESC", DbType = "Char(50)")]
    public string S_DESC
    {
        get
        {
            return this._S_DESC;
        }
        set
        {
            if ((this._S_DESC != value))
            {
                this._S_DESC = value;
            }
        }
    }

    [Column(Storage = "_S_TYPE", DbType = "Char(1)")]
    public string S_TYPE
    {
        get
        {
            return this._S_TYPE;
        }
        set
        {
            if ((this._S_TYPE != value))
            {
                this._S_TYPE = value;
            }
        }
    }

    [Column(Storage = "_S_OPBAL", DbType = "Decimal(18,3)")]
    public System.Nullable<decimal> S_OPBAL
    {
        get
        {
            return this._S_OPBAL;
        }
        set
        {
            if ((this._S_OPBAL != value))
            {
                this._S_OPBAL = value;
            }
        }
    }

    [Column(Storage = "_S_DRCR", DbType = "Char(2)")]
    public string S_DRCR
    {
        get
        {
            return this._S_DRCR;
        }
        set
        {
            if ((this._S_DRCR != value))
            {
                this._S_DRCR = value;
            }
        }
    }

    [Column(Storage = "_S_FLAG", DbType = "Char(1)")]
    public string S_FLAG
    {
        get
        {
            return this._S_FLAG;
        }
        set
        {
            if ((this._S_FLAG != value))
            {
                this._S_FLAG = value;
            }
        }
    }
}

public partial class SpGetJDetailResult
{

    private string _J_ID;

    private string _J_CODE;

    private string _J_DRCR;

    private System.Nullable<decimal> _J_AMOUNT;

    public SpGetJDetailResult()
    {
    }

    [Column(Storage = "_J_ID", DbType = "Char(10)")]
    public string J_ID
    {
        get
        {
            return this._J_ID;
        }
        set
        {
            if ((this._J_ID != value))
            {
                this._J_ID = value;
            }
        }
    }

    [Column(Storage = "_J_CODE", DbType = "Char(5)")]
    public string J_CODE
    {
        get
        {
            return this._J_CODE;
        }
        set
        {
            if ((this._J_CODE != value))
            {
                this._J_CODE = value;
            }
        }
    }

    [Column(Storage = "_J_DRCR", DbType = "Char(2)")]
    public string J_DRCR
    {
        get
        {
            return this._J_DRCR;
        }
        set
        {
            if ((this._J_DRCR != value))
            {
                this._J_DRCR = value;
            }
        }
    }

    [Column(Storage = "_J_AMOUNT", DbType = "Decimal(18,3)")]
    public System.Nullable<decimal> J_AMOUNT
    {
        get
        {
            return this._J_AMOUNT;
        }
        set
        {
            if ((this._J_AMOUNT != value))
            {
                this._J_AMOUNT = value;
            }
        }
    }
}

public partial class SpGetJMasterResult
{

    private string _J_ID;

    private string _J_DOC;

    private System.Nullable<System.DateTime> _J_DATE;

    private System.Nullable<decimal> _J_AMOUNT;

    private string _J_NARR;

    public SpGetJMasterResult()
    {
    }

    [Column(Storage = "_J_ID", DbType = "Char(10)")]
    public string J_ID
    {
        get
        {
            return this._J_ID;
        }
        set
        {
            if ((this._J_ID != value))
            {
                this._J_ID = value;
            }
        }
    }

    [Column(Storage = "_J_DOC", DbType = "Char(2)")]
    public string J_DOC
    {
        get
        {
            return this._J_DOC;
        }
        set
        {
            if ((this._J_DOC != value))
            {
                this._J_DOC = value;
            }
        }
    }

    [Column(Storage = "_J_DATE", DbType = "DateTime")]
    public System.Nullable<System.DateTime> J_DATE
    {
        get
        {
            return this._J_DATE;
        }
        set
        {
            if ((this._J_DATE != value))
            {
                this._J_DATE = value;
            }
        }
    }

    [Column(Storage = "_J_AMOUNT", DbType = "Decimal(18,3)")]
    public System.Nullable<decimal> J_AMOUNT
    {
        get
        {
            return this._J_AMOUNT;
        }
        set
        {
            if ((this._J_AMOUNT != value))
            {
                this._J_AMOUNT = value;
            }
        }
    }

    [Column(Storage = "_J_NARR", DbType = "NChar(100)")]
    public string J_NARR
    {
        get
        {
            return this._J_NARR;
        }
        set
        {
            if ((this._J_NARR != value))
            {
                this._J_NARR = value;
            }
        }
    }
}

public partial class SpListFAGroupResult
{

    private string _A_CODE;

    private string _A_DESC;

    private string _A_TYPE;

    private System.Nullable<decimal> _A_CURRB;

    public SpListFAGroupResult()
    {
    }

    [Column(Storage = "_A_CODE", DbType = "Char(2)")]
    public string A_CODE
    {
        get
        {
            return this._A_CODE;
        }
        set
        {
            if ((this._A_CODE != value))
            {
                this._A_CODE = value;
            }
        }
    }

    [Column(Storage = "_A_DESC", DbType = "Char(50)")]
    public string A_DESC
    {
        get
        {
            return this._A_DESC;
        }
        set
        {
            if ((this._A_DESC != value))
            {
                this._A_DESC = value;
            }
        }
    }

    [Column(Storage = "_A_TYPE", DbType = "Char(1)")]
    public string A_TYPE
    {
        get
        {
            return this._A_TYPE;
        }
        set
        {
            if ((this._A_TYPE != value))
            {
                this._A_TYPE = value;
            }
        }
    }

    [Column(Storage = "_A_CURRB", DbType = "Decimal(18,3)")]
    public System.Nullable<decimal> A_CURRB
    {
        get
        {
            return this._A_CURRB;
        }
        set
        {
            if ((this._A_CURRB != value))
            {
                this._A_CURRB = value;
            }
        }
    }
}

public partial class SpListFASubGroupResult
{

    private string _S_CODE;

    private string _S_DESC;

    private string _S_TYPE;

    private System.Nullable<decimal> _S_OPBAL;

    private string _S_DRCR;

    private string _S_FLAG;

    public SpListFASubGroupResult()
    {
    }

    [Column(Storage = "_S_CODE", DbType = "Char(5)")]
    public string S_CODE
    {
        get
        {
            return this._S_CODE;
        }
        set
        {
            if ((this._S_CODE != value))
            {
                this._S_CODE = value;
            }
        }
    }

    [Column(Storage = "_S_DESC", DbType = "Char(50)")]
    public string S_DESC
    {
        get
        {
            return this._S_DESC;
        }
        set
        {
            if ((this._S_DESC != value))
            {
                this._S_DESC = value;
            }
        }
    }

    [Column(Storage = "_S_TYPE", DbType = "Char(1)")]
    public string S_TYPE
    {
        get
        {
            return this._S_TYPE;
        }
        set
        {
            if ((this._S_TYPE != value))
            {
                this._S_TYPE = value;
            }
        }
    }

    [Column(Storage = "_S_OPBAL", DbType = "Decimal(18,3)")]
    public System.Nullable<decimal> S_OPBAL
    {
        get
        {
            return this._S_OPBAL;
        }
        set
        {
            if ((this._S_OPBAL != value))
            {
                this._S_OPBAL = value;
            }
        }
    }

    [Column(Storage = "_S_DRCR", DbType = "Char(2)")]
    public string S_DRCR
    {
        get
        {
            return this._S_DRCR;
        }
        set
        {
            if ((this._S_DRCR != value))
            {
                this._S_DRCR = value;
            }
        }
    }

    [Column(Storage = "_S_FLAG", DbType = "Char(1)")]
    public string S_FLAG
    {
        get
        {
            return this._S_FLAG;
        }
        set
        {
            if ((this._S_FLAG != value))
            {
                this._S_FLAG = value;
            }
        }
    }
}

public partial class SpListJDetailResult
{

    private string _J_ID;

    private string _J_CODE;

    private string _J_DRCR;

    private System.Nullable<decimal> _J_AMOUNT;

    public SpListJDetailResult()
    {
    }

    [Column(Storage = "_J_ID", DbType = "Char(10)")]
    public string J_ID
    {
        get
        {
            return this._J_ID;
        }
        set
        {
            if ((this._J_ID != value))
            {
                this._J_ID = value;
            }
        }
    }

    [Column(Storage = "_J_CODE", DbType = "Char(5)")]
    public string J_CODE
    {
        get
        {
            return this._J_CODE;
        }
        set
        {
            if ((this._J_CODE != value))
            {
                this._J_CODE = value;
            }
        }
    }

    [Column(Storage = "_J_DRCR", DbType = "Char(2)")]
    public string J_DRCR
    {
        get
        {
            return this._J_DRCR;
        }
        set
        {
            if ((this._J_DRCR != value))
            {
                this._J_DRCR = value;
            }
        }
    }

    [Column(Storage = "_J_AMOUNT", DbType = "Decimal(18,3)")]
    public System.Nullable<decimal> J_AMOUNT
    {
        get
        {
            return this._J_AMOUNT;
        }
        set
        {
            if ((this._J_AMOUNT != value))
            {
                this._J_AMOUNT = value;
            }
        }
    }
}

public partial class SpListJMasterResult
{

    private string _J_ID;

    private string _J_DOC;

    private System.Nullable<System.DateTime> _J_DATE;

    private System.Nullable<decimal> _J_AMOUNT;

    private string _J_NARR;

    public SpListJMasterResult()
    {
    }

    [Column(Storage = "_J_ID", DbType = "Char(10)")]
    public string J_ID
    {
        get
        {
            return this._J_ID;
        }
        set
        {
            if ((this._J_ID != value))
            {
                this._J_ID = value;
            }
        }
    }

    [Column(Storage = "_J_DOC", DbType = "Char(2)")]
    public string J_DOC
    {
        get
        {
            return this._J_DOC;
        }
        set
        {
            if ((this._J_DOC != value))
            {
                this._J_DOC = value;
            }
        }
    }

    [Column(Storage = "_J_DATE", DbType = "DateTime")]
    public System.Nullable<System.DateTime> J_DATE
    {
        get
        {
            return this._J_DATE;
        }
        set
        {
            if ((this._J_DATE != value))
            {
                this._J_DATE = value;
            }
        }
    }

    [Column(Storage = "_J_AMOUNT", DbType = "Decimal(18,3)")]
    public System.Nullable<decimal> J_AMOUNT
    {
        get
        {
            return this._J_AMOUNT;
        }
        set
        {
            if ((this._J_AMOUNT != value))
            {
                this._J_AMOUNT = value;
            }
        }
    }

    [Column(Storage = "_J_NARR", DbType = "NChar(100)")]
    public string J_NARR
    {
        get
        {
            return this._J_NARR;
        }
        set
        {
            if ((this._J_NARR != value))
            {
                this._J_NARR = value;
            }
        }
    }
}
#pragma warning restore 1591
